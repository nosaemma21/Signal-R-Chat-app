@page "/"

@using Microsoft.AspNetCore.SignalR.Client
@implements IAsyncDisposable

<PageTitle>Home</PageTitle>

<div id="username-group">
 <label>User Name</label>
 <input type="text" @bind="_username" />
 </div>
 <div id="message-group">
 <label>Message</label>
 <input type="text" @bind="_message" />
 </div>
 <input type="button" value="Send" @onclick="SendMessage" 
disabled="@(!IsConnected)" />
 <ul>
 @foreach (var message in _messages)
 {
 <li>@message</li>
 }
 </ul>

 @code {
    private HubConnection? _hubConnection;
    private readonly List<string> _messages = new ();
    private string? _username;
    private string? _message;
    private bool IsConnected => _hubConnection?.State == 
HubConnectionState.Connected;
    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
        .WithUrl("https://localhost:7097/chatHub")
        .Build();
        _hubConnection.On<string, string>("ReceiveMessage", 
(username, message) =>
        {
            var encodedMessage = $"{username}: {message}";
            _messages.Add(encodedMessage);
            StateHasChanged();
        });
        await _hubConnection.StartAsync();
    }
    private async Task SendMessage()
    {
        if (_hubConnection != null && IsConnected)
        {
            await _hubConnection!.InvokeAsync("SendMessage", _username, _message);
            _message = string.Empty;
        }
    }
    public async ValueTask DisposeAsync()
    {
        if (_hubConnection is not null)
        {
            await _hubConnection.DisposeAsync();
        }
    }
 }
